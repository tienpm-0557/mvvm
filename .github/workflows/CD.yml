name: CD
on:
  push:
    branches:
        - master
  
  pull_request:
    branches:
        - master
    paths:
      - './MVVMExample'
      
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    name: Swift ${{ matrix.swift }} on ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-11]
        swift: ["5.2", "5.3"]
#    runs-on: ${{ matrix.os }}
    runs-on: macos-latest
    timeout-minutes: 20
        
    steps:
      - uses: fwal/setup-swift@d43a564349d1341cd990cfbd70d94d63b8899475
        with:
          swift-version: ${{ matrix.swift }}
      - uses: actions/checkout@v2
      - name: Apply Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      - name: Install Dependency
        working-directory: ./MVVMExample
        run: |
          pod install
          
      - name: Archive
        working-directory: ./MVVMExample
        env:
          EXPORT_SCHEME: 'MVVMExample'
          EXPORT_DIR: './output'
          EXPORT_OPTIONS_PLIST_DIR: './config/export-config-debug.plist'
          
          APP_CONNECT_USER_ID: ${{ secrets.APP_CONNECT_USER_ID }}
          APP_CONNECT_PRIVATE_KEY: ${{ secrets.APP_CONNECT_PRIVATE_KEY }}

        run: |
          rm -rf "$EXPORT_DIR"
          set -o pipefail && xcodebuild -workspace "./MVVMExample.xcworkspace" -scheme "$EXPORT_SCHEME" -destination 'generic/platform=iOS' -archivePath "./MVVMExample.xcarchive" archive;
          arch -x86_64 xcodebuild -exportArchive -archivePath "./MVVMExample.xcarchive" -exportPath "$EXPORT_DIR" -exportOptionsPlist "$EXPORT_OPTIONS_PLIST_DIR";
          rm -rf "./MVVMExample.xcarchive"
          
          if [ ! -f "$EXPORT_DIR/MVVMExample.ipa" ]
          then
            echo "MVVMExample.ipa not found!"
          else
            xcrun altool --upload-app -f $EXPORT_DIR -t ios --apiKey $APP_CONNECT_PRIVATE_KEY --apiIssuer $APP_CONNECT_USER_ID
          fi
  
